<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="intake_creation" sap2010:Annotation.AnnotationText="UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="654,756" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/cv" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:uast="clr-namespace:UiPath.Activities.System.Text;assembly=UiPath.System.Activities" xmlns:uc="clr-namespace:UiPath.CV;assembly=UiPath.CV" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Activities.System.Text</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Security</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart sap:VirtualizedContainerService.HintSize="634,1812" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="njl:JObject" Name="JsonArray" />
      <Variable x:TypeArguments="x:String" Name="instance_code" />
      <Variable x:TypeArguments="x:String" Name="zephyr_environments_connection_string" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="db_connection" />
      <Variable x:TypeArguments="sd:DataTable" Name="processmaster_data" />
      <Variable x:TypeArguments="x:String" Name="login_id" />
      <Variable x:TypeArguments="x:String" Name="password" />
      <Variable x:TypeArguments="njl:JObject" Name="data_template_values" />
      <Variable x:TypeArguments="x:String" Name="url" />
      <Variable x:TypeArguments="x:String" Name="intake_url" />
      <Variable x:TypeArguments="x:Boolean" Name="duplicate" />
      <Variable x:TypeArguments="ui:Browser" Name="opened_browser" />
      <Variable x:TypeArguments="x:String" Name="location" />
      <Variable x:TypeArguments="x:String" Name="lob" />
      <Variable x:TypeArguments="x:String" Name="first_name" />
      <Variable x:TypeArguments="x:String" Name="last_name" />
      <Variable x:TypeArguments="x:String" Name="dob" />
      <Variable x:TypeArguments="x:String" Name="payer" />
      <Variable x:TypeArguments="x:String" Name="care_type" />
      <Variable x:TypeArguments="x:String" Name="extracted_error_logs" />
      <Variable x:TypeArguments="x:String" Name="extracted_error_logs_escaped" />
      <Variable x:TypeArguments="njl:JArray" Name="workflow_template_values" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">287,0</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">317,75 317,125</av:PointCollection>
        <x:Double x:Key="Height">1774.727037370554</x:Double>
        <x:Double x:Key="Width">600</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID12</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">217,125</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">317,177 317,227</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Getting DB details" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1">
            <ui:DeserializeJson.JsonObject>
              <OutArgument x:TypeArguments="njl:JObject">
                <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">JsonArray</CSharpReference>
              </OutArgument>
            </ui:DeserializeJson.JsonObject>
            <ui:DeserializeJson.JsonString>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">System.IO.File.ReadAllText("config.json")</CSharpValue>
              </InArgument>
            </ui:DeserializeJson.JsonString>
          </ui:DeserializeJson>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="422,472" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="416,402" sap2010:WorkflowViewState.IdRef="Sequence_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                </ui:LogMessage>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </ActivityAction>
          </Catch>
          <Catch x:TypeArguments="si:FileNotFoundException" sap:VirtualizedContainerService.HintSize="422,472" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="si:FileNotFoundException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="si:FileNotFoundException" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="416,402" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                </ui:LogMessage>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </ActivityAction>
          </Catch>
          <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="422,211" sap2010:WorkflowViewState.IdRef="Catch`1_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:NullReferenceException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
              </ActivityAction.Argument>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                <ui:LogMessage.Level>
                  <InArgument x:TypeArguments="ui:LogLevel">
                    <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Level>
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">100,227</av:Point>
              <av:Size x:Key="ShapeSize">434,52</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">317,279 317,329</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">instance_code</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">JsonArray.SelectToken("instance_code").ToString()</CSharpValue>
                    </InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">zephyr_environments_connection_string</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">JsonArray.SelectToken("zephyr_environments_connection_string").ToString()</CSharpValue>
                    </InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">217,329</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">317,381 317,431</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Connect MSSQL" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                <TryCatch.Try>
                  <ui:DatabaseConnect DisplayName="Connect to Database" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="Microsoft.Data.SqlClient">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:DatabaseConnect.ConnectionString>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">zephyr_environments_connection_string+"; Encrypt=False"</CSharpValue>
                      </InArgument>
                    </ui:DatabaseConnect.ConnectionString>
                    <ui:DatabaseConnect.DatabaseConnection>
                      <OutArgument x:TypeArguments="ui:DatabaseConnection">
                        <CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">db_connection</CSharpReference>
                      </OutArgument>
                    </ui:DatabaseConnect.DatabaseConnection>
                  </ui:DatabaseConnect>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="422,472" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="416,402" sap2010:WorkflowViewState.IdRef="Sequence_41">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="LogMessage_21">
                          <ui:LogMessage.Level>
                            <InArgument x:TypeArguments="ui:LogLevel">
                              <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Level>
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_186">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">217,431</av:Point>
                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">317,483 317,513 318,513 318,533</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Run Query" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="select * from processmaster">
                    <ui:ExecuteQuery.DataTable>
                      <OutArgument x:TypeArguments="sd:DataTable">
                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">processmaster_data</CSharpReference>
                      </OutArgument>
                    </ui:ExecuteQuery.DataTable>
                    <ui:ExecuteQuery.ExistingDbConnection>
                      <InArgument x:TypeArguments="ui:DatabaseConnection">
                        <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">db_connection</CSharpValue>
                      </InArgument>
                    </ui:ExecuteQuery.ExistingDbConnection>
                    <ui:ExecuteQuery.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:ExecuteQuery.Parameters>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExecuteQuery>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">218,533</av:Point>
                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">318,585 318,635</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Parallel DisplayName="Template trace" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Parallel_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Getting data_template_path" sap:VirtualizedContainerService.HintSize="334,181" sap2010:WorkflowViewState.IdRef="LogMessage_16">
                          <ui:LogMessage.Level>
                            <InArgument x:TypeArguments="ui:LogLevel">
                              <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">UiPath.Core.Activities.LogLevel.Trace</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Level>
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">processmaster_data.Rows[0]["data_template_path"].ToString()</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <ui:LogMessage DisplayName="Getting data_template_path" sap:VirtualizedContainerService.HintSize="334,181" sap2010:WorkflowViewState.IdRef="LogMessage_17">
                          <ui:LogMessage.Level>
                            <InArgument x:TypeArguments="ui:LogLevel">
                              <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">UiPath.Core.Activities.LogLevel.Trace</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Level>
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">processmaster_data.Rows[0]["workflow_template_path"].ToString()</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                      </Parallel>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">218,635</av:Point>
                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">318,687 318,737</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Parallel DisplayName="Deserialize data" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Parallel_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,100" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3">
                              <ui:DeserializeJson.JsonObject>
                                <OutArgument x:TypeArguments="njl:JObject">
                                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">data_template_values</CSharpReference>
                                </OutArgument>
                              </ui:DeserializeJson.JsonObject>
                              <ui:DeserializeJson.JsonString>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">processmaster_data.Rows[0]["data_template_path"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:DeserializeJson.JsonString>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:DeserializeJson>
                            <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array" sap:VirtualizedContainerService.HintSize="334,100" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_3">
                              <ui:DeserializeJsonArray.JsonArray>
                                <OutArgument x:TypeArguments="njl:JArray">
                                  <CSharpReference x:TypeArguments="njl:JArray" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">workflow_template_values</CSharpReference>
                                </OutArgument>
                              </ui:DeserializeJsonArray.JsonArray>
                              <ui:DeserializeJsonArray.JsonString>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">processmaster_data.Rows[0]["workflow_template_path"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:DeserializeJsonArray.JsonString>
                            </ui:DeserializeJsonArray>
                          </Parallel>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">101,737</av:Point>
                                  <av:Size x:Key="ShapeSize">434,52</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">318,789 318,839</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MultipleAssign DisplayName="data template value assign" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">login_id</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">data_template_values.SelectToken("login_id").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">password</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">data_template_values.SelectToken("password").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">url</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">data_template_values.SelectToken("url").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">location</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">data_template_values.SelectToken("location").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">lob</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">data_template_values.SelectToken("lob").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">first_name</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">data_template_values.SelectToken("first_name").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">last_name</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">data_template_values.SelectToken("last_name").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">dob</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">data_template_values.SelectToken("dob").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">payer</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">data_template_values.SelectToken("payer").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">care_type</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">data_template_values.SelectToken("care_type").ToString()</CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:MultipleAssign>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">218,839</av:Point>
                                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">318,891 318,941</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_204">login_id+" , "+password+", "+workflow_template_values+", "+data_template_values</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID5">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">218,941</av:Point>
                                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                                          <av:PointCollection x:Key="ConnectorLocation">318,993 318,1043</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch DisplayName="Intake creation block" sap:VirtualizedContainerService.HintSize="838,16601" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                        <TryCatch.Try>
                                          <ui:OpenBrowser CommunicationMethod="{x:Null}" NewSession="{x:Null}" AutomaticallyDownloadWebDriver="False" BrowserType="Chrome" DisplayName="Open Browser" Hidden="False" sap:VirtualizedContainerService.HintSize="800,15819" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Private="True">
                                            <ui:OpenBrowser.Body>
                                              <ActivityAction x:TypeArguments="x:Object">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                </ActivityAction.Argument>
                                                <Sequence sap:VirtualizedContainerService.HintSize="766,15694" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="704,15534" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:Int32" Name="check_duplicate" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="642,65" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                                                    <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="642,15341" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                                                      <ui:ForEach.Body>
                                                        <ActivityAction x:TypeArguments="njl:JToken">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="njl:JToken" Name="currentJToken" />
                                                          </ActivityAction.Argument>
                                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="608,15154" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If sap:VirtualizedContainerService.HintSize="546,1167" sap2010:WorkflowViewState.IdRef="If_3">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">currentJToken.ToString()=="login"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,911" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  txt_username'" sap:VirtualizedContainerService.HintSize="354,195" sap2010:WorkflowViewState.IdRef="TypeInto_8" SimulateType="False">
                                                                    <ui:TypeInto.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="db8b6ac3-7f74-4a09-a0d8-3d813c5863e9" InformativeScreenshot="31219383b3f8d2b9a5a9956b5b087b2f" Selector="&lt;webctrl tag='TABLE' /&gt;&lt;webctrl id='txt_username' omit:tableRow='1' tag='INPUT' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:TypeInto.Target>
                                                                    <ui:TypeInto.Text>
                                                                      <InArgument x:TypeArguments="x:String">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">"[d(ctrl)]a[u(ctrl)][k(back)]"+login_id</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:TypeInto.Text>
                                                                  </ui:TypeInto>
                                                                  <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  txt_password'" sap:VirtualizedContainerService.HintSize="354,195" sap2010:WorkflowViewState.IdRef="TypeInto_9">
                                                                    <ui:TypeInto.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a059a400-dc18-4f3b-960b-27cdf5f97c2e" InformativeScreenshot="be214f0db97f222b10d17be720e2e0a8" Selector="&lt;webctrl tag='TABLE' /&gt;&lt;webctrl id='txt_password' omit:tableRow='4' tag='INPUT' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:TypeInto.Target>
                                                                    <ui:TypeInto.Text>
                                                                      <InArgument x:TypeArguments="x:String">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206">"[d(ctrl)]a[u(ctrl)][k(back)]" +password</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:TypeInto.Text>
                                                                  </ui:TypeInto>
                                                                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  btn_login'" sap:VirtualizedContainerService.HintSize="354,147" sap2010:WorkflowViewState.IdRef="Click_17" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                    <ui:Click.CursorPosition>
                                                                      <ui:CursorPosition Position="Center">
                                                                        <ui:CursorPosition.OffsetX>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetX>
                                                                        <ui:CursorPosition.OffsetY>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetY>
                                                                      </ui:CursorPosition>
                                                                    </ui:Click.CursorPosition>
                                                                    <ui:Click.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="05d17aa6-e685-4398-8563-2a2f0e378796" InformativeScreenshot="0606d29a26047470be2d5f915474af7c" Selector="&lt;webctrl id='btn_login' tag='BUTTON' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:Click.Target>
                                                                  </ui:Click>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,78" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If sap:VirtualizedContainerService.HintSize="546,783" sap2010:WorkflowViewState.IdRef="If_4">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">currentJToken.ToString()=="intake_page_opening"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,527" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="intake_page - Invoke Workflow File (KT Pages\\intake_page.xaml)" sap:VirtualizedContainerService.HintSize="354,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="KT Pages\\intake_page.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,78" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If sap:VirtualizedContainerService.HintSize="546,847" sap2010:WorkflowViewState.IdRef="If_5">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">currentJToken.ToString()=="select_location"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="421,569" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="359,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:SelectItem AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Select Item 'SELECT  MainContent_drp...'" sap:VirtualizedContainerService.HintSize="359,195" sap2010:WorkflowViewState.IdRef="SelectItem_1">
                                                                    <ui:SelectItem.Item>
                                                                      <InArgument x:TypeArguments="x:String">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">location</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:SelectItem.Item>
                                                                    <ui:SelectItem.Items>
                                                                      <scg:List x:TypeArguments="x:String" Capacity="50">
                                                                        <x:String>--Select--</x:String>
                                                                        <x:String>23456</x:String>
                                                                        <x:String>63456</x:String>
                                                                        <x:String>Adam Branchgrefe</x:String>
                                                                        <x:String>Adam Pedi</x:String>
                                                                        <x:String>adasdas</x:String>
                                                                        <x:String>Anusha_create branch</x:String>
                                                                        <x:String>Arpitha_CreateBranch</x:String>
                                                                        <x:String>AshEpisodic</x:String>
                                                                        <x:String>AUstin</x:String>
                                                                        <x:String>Austin location</x:String>
                                                                        <x:String>Azeem</x:String>
                                                                        <x:String>bappa</x:String>
                                                                        <x:String>bharat</x:String>
                                                                        <x:String>Branch 1</x:String>
                                                                        <x:String>branch 11</x:String>
                                                                        <x:String>Branch 3</x:String>
                                                                        <x:String>Branch Aishu</x:String>
                                                                        <x:String>Branch Gk</x:String>
                                                                        <x:String>Branch Test</x:String>
                                                                        <x:String>Branch_25</x:String>
                                                                        <x:String>branch_k1_Test</x:String>
                                                                        <x:String>Branch_Sahil</x:String>
                                                                        <x:String>Branch_test_10</x:String>
                                                                        <x:String>branch1</x:String>
                                                                        <x:String>branch6</x:String>
                                                                        <x:String>branchtest</x:String>
                                                                        <x:String>CA</x:String>
                                                                        <x:String>Criticare</x:String>
                                                                        <x:String>DAAS AGENCY</x:String>
                                                                        <x:String>dead pool1</x:String>
                                                                        <x:String>DEEPAK-BRANCH</x:String>
                                                                        <x:String>DevTesting</x:String>
                                                                        <x:String>dexter_test</x:String>
                                                                        <x:String>df</x:String>
                                                                        <x:String>dfdgh</x:String>
                                                                        <x:String>dfg</x:String>
                                                                        <x:String>ETL TEST</x:String>
                                                                        <x:String>fa</x:String>
                                                                        <x:String>Faique - Branch</x:String>
                                                                        <x:String>Faizan_Branch</x:String>
                                                                        <x:String>fhnnjgn</x:String>
                                                                        <x:String>FMS</x:String>
                                                                        <x:String>ggg</x:String>
                                                                        <x:String>Jennifer_test132</x:String>
                                                                        <x:String>Jennifer_test2</x:String>
                                                                        <x:String>Jennifer_test323</x:String>
                                                                        <x:String>Kaan</x:String>
                                                                        <x:String>kafkatest</x:String>
                                                                        <x:String>KanTime</x:String>
                                                                      </scg:List>
                                                                    </ui:SelectItem.Items>
                                                                    <ui:SelectItem.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="356f35fd-17bb-486b-ac91-924927c62c87" InformativeScreenshot="3f8b5704daf03595d0ec74a8d33bb7ce" Selector="&lt;webctrl parentid='divIntakeMgmt' tag='TABLE' /&gt;&lt;webctrl id='MainContent_drp_Branch' tableRow='1' tag='SELECT' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:SelectItem.Target>
                                                                  </ui:SelectItem>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="359,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If sap:VirtualizedContainerService.HintSize="546,847" sap2010:WorkflowViewState.IdRef="If_6">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">currentJToken.ToString()=="select_LOB"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="421,569" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="359,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:SelectItem AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Select Item 'SELECT  MainContent_ddl...'" sap:VirtualizedContainerService.HintSize="359,195" sap2010:WorkflowViewState.IdRef="SelectItem_2">
                                                                    <ui:SelectItem.Item>
                                                                      <InArgument x:TypeArguments="x:String">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">lob</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:SelectItem.Item>
                                                                    <ui:SelectItem.Items>
                                                                      <scg:List x:TypeArguments="x:String" Capacity="50">
                                                                        <x:String>--Select--</x:String>
                                                                        <x:String>____________Vinutha</x:String>
                                                                        <x:String>___________2222</x:String>
                                                                        <x:String>0000doceruyuytweiuuuuuuuuuuEND</x:String>
                                                                        <x:String>1234</x:String>
                                                                        <x:String>adult</x:String>
                                                                        <x:String>Adult Nursing</x:String>
                                                                        <x:String>Adult Skilled</x:String>
                                                                        <x:String>Adult test</x:String>
                                                                        <x:String>Adult Therapy</x:String>
                                                                        <x:String>Aide/PAS</x:String>
                                                                        <x:String>Amrutha Shetty</x:String>
                                                                        <x:String>Ashish LOB</x:String>
                                                                        <x:String>ashish singh lob</x:String>
                                                                        <x:String>Ashwin01</x:String>
                                                                        <x:String>aswin</x:String>
                                                                        <x:String>Basic Test_</x:String>
                                                                        <x:String>BOBtest</x:String>
                                                                        <x:String>CDS LOB</x:String>
                                                                        <x:String>CDS LOB BSY</x:String>
                                                                        <x:String>DAAS</x:String>
                                                                        <x:String>Darshan LOB</x:String>
                                                                        <x:String>dexter_test</x:String>
                                                                        <x:String>dexter_test1</x:String>
                                                                        <x:String>dexterlaterap</x:String>
                                                                        <x:String>Echart new test</x:String>
                                                                        <x:String>Elentra</x:String>
                                                                        <x:String>Episode LESS LOB</x:String>
                                                                        <x:String>Faizan_LOB</x:String>
                                                                        <x:String>G LOB</x:String>
                                                                        <x:String>Gagan LOB</x:String>
                                                                        <x:String>J Test LOB</x:String>
                                                                        <x:String>Lavanya_lob</x:String>
                                                                        <x:String>LEE LOB</x:String>
                                                                        <x:String>LOB</x:String>
                                                                        <x:String>LOB 1</x:String>
                                                                        <x:String>LOB 12th Oct</x:String>
                                                                        <x:String>Lob 13th Oct</x:String>
                                                                        <x:String>LOB_OO</x:String>
                                                                        <x:String>LOB_Sahil</x:String>
                                                                        <x:String>LOB1</x:String>
                                                                        <x:String>lon</x:String>
                                                                        <x:String>Maha</x:String>
                                                                        <x:String>New LOB</x:String>
                                                                        <x:String>New LOB Test</x:String>
                                                                        <x:String>Nursing</x:String>
                                                                        <x:String>pavipeter1</x:String>
                                                                        <x:String>PDN</x:String>
                                                                        <x:String>Pediatrics Nursing</x:String>
                                                                        <x:String>Peter_Testing_1</x:String>
                                                                      </scg:List>
                                                                    </ui:SelectItem.Items>
                                                                    <ui:SelectItem.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1d143125-e7c1-4064-ad37-1d978c36d0a8" InformativeScreenshot="fb94fd2e4a8615a6b8476d925a24d4ba" Selector="&lt;webctrl id='MainContent_ddl_LOB' tag='SELECT' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:SelectItem.Target>
                                                                  </ui:SelectItem>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="359,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If sap:VirtualizedContainerService.HintSize="546,1042" sap2010:WorkflowViewState.IdRef="If_7">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">currentJToken.ToString()=="enter_name"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,764" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  MainContent_txtF...'" sap:VirtualizedContainerService.HintSize="354,195" sap2010:WorkflowViewState.IdRef="TypeInto_3">
                                                                    <ui:TypeInto.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ec7d6f95-40bf-427c-baca-22521df01f05" InformativeScreenshot="ae4684c0d275ac381f068ed30074d156" Selector="&lt;webctrl id='MainContent_txtFirstname' tag='INPUT' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:TypeInto.Target>
                                                                    <ui:TypeInto.Text>
                                                                      <InArgument x:TypeArguments="x:String">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">first_name</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:TypeInto.Text>
                                                                  </ui:TypeInto>
                                                                  <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  MainContent_txtL...'" sap:VirtualizedContainerService.HintSize="354,195" sap2010:WorkflowViewState.IdRef="TypeInto_4">
                                                                    <ui:TypeInto.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3ee6c3a3-e02a-4113-8980-5c3c954cb692" InformativeScreenshot="4479de4b4d87301e1330d97a41fbd3c2" Selector="&lt;webctrl id='MainContent_txtLastname' tag='INPUT' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:TypeInto.Target>
                                                                    <ui:TypeInto.Text>
                                                                      <InArgument x:TypeArguments="x:String">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">last_name</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:TypeInto.Text>
                                                                  </ui:TypeInto>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_160">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If sap:VirtualizedContainerService.HintSize="546,847" sap2010:WorkflowViewState.IdRef="If_8">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">currentJToken.ToString()=="enter_DOB"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,569" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  MainContent_txtD...'" sap:VirtualizedContainerService.HintSize="354,195" sap2010:WorkflowViewState.IdRef="TypeInto_5">
                                                                    <ui:TypeInto.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fd9d5d9c-3f8c-497e-b699-f4273d82d97e" InformativeScreenshot="e3673c4a1977431099142f0804358d4c" Selector="&lt;webctrl id='MainContent_txtDOB' tag='INPUT' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:TypeInto.Target>
                                                                    <ui:TypeInto.Text>
                                                                      <InArgument x:TypeArguments="x:String">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">dob</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:TypeInto.Text>
                                                                  </ui:TypeInto>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If sap:VirtualizedContainerService.HintSize="546,847" sap2010:WorkflowViewState.IdRef="If_9">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">currentJToken.ToString()=="enter_payer"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="421,569" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="359,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:SelectItem AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Select Item 'SELECT  MainContent_ddl...'" sap:VirtualizedContainerService.HintSize="359,195" sap2010:WorkflowViewState.IdRef="SelectItem_3">
                                                                    <ui:SelectItem.Item>
                                                                      <InArgument x:TypeArguments="x:String">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">payer</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:SelectItem.Item>
                                                                    <ui:SelectItem.Items>
                                                                      <scg:List x:TypeArguments="x:String" Capacity="50">
                                                                        <x:String>--Select--</x:String>
                                                                        <x:String>Adult Medicare</x:String>
                                                                        <x:String>___Santhosh - MC - 1 - Adult</x:String>
                                                                        <x:String>___Santhosh1 - EPI - 4 - Adult - Payer</x:String>
                                                                        <x:String>__Ash_</x:String>
                                                                        <x:String>_test mco 101</x:String>
                                                                        <x:String>0</x:String>
                                                                        <x:String>0000tywey</x:String>
                                                                        <x:String>1 Pritish Test</x:String>
                                                                        <x:String>1TEST PATRIC</x:String>
                                                                        <x:String>445</x:String>
                                                                        <x:String>5y6</x:String>
                                                                        <x:String>8976</x:String>
                                                                        <x:String>A1</x:String>
                                                                        <x:String>AA1</x:String>
                                                                        <x:String>AAAA RCD Payer</x:String>
                                                                        <x:String>AAAAAAAAA</x:String>
                                                                        <x:String>ABA Form Test</x:String>
                                                                        <x:String>Abdul 1</x:String>
                                                                        <x:String>Abdul 2</x:String>
                                                                        <x:String>Accu Check7</x:String>
                                                                        <x:String>Adam Sandler (Payer)</x:String>
                                                                        <x:String>Adam Sandler Payer Source</x:String>
                                                                        <x:String>Add new payer</x:String>
                                                                        <x:String>ADD TEST PAYER</x:String>
                                                                        <x:String>AdditionalLineitem</x:String>
                                                                        <x:String>ADR test 2</x:String>
                                                                        <x:String>Adult Aide</x:String>
                                                                        <x:String>adult aide 2</x:String>
                                                                        <x:String>Adult Managed Care</x:String>
                                                                        <x:String>Adult medicaid1</x:String>
                                                                        <x:String>Adult Payer TEST</x:String>
                                                                        <x:String>Aetna - Medicaid</x:String>
                                                                        <x:String>Aetna Agency - SK</x:String>
                                                                        <x:String>AETNA MEDICARE</x:String>
                                                                        <x:String>Amerigroup - CHIP</x:String>
                                                                        <x:String>Anila</x:String>
                                                                        <x:String>Arijeet</x:String>
                                                                        <x:String>Ash 12 Medicare</x:String>
                                                                        <x:String>ashleykimpayersource</x:String>
                                                                        <x:String>Ashwin - 1</x:String>
                                                                        <x:String>Athena CP</x:String>
                                                                        <x:String>Athena EDI Homecare</x:String>
                                                                        <x:String>Athena Homecare Adultservices</x:String>
                                                                        <x:String>Athena Homecare CDS</x:String>
                                                                        <x:String>Athena Homecare Co</x:String>
                                                                        <x:String>Athena Homecare Medcare</x:String>
                                                                        <x:String>Auth form payer</x:String>
                                                                        <x:String>BETA TEST0--0</x:String>
                                                                        <x:String>Billable MISC Medicaid</x:String>
                                                                      </scg:List>
                                                                    </ui:SelectItem.Items>
                                                                    <ui:SelectItem.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2bd3854b-35af-4c71-aeac-ea2f0687b8ad" InformativeScreenshot="8993fa44cbea3927cdde1235b7232f89" Selector="&lt;webctrl id='MainContent_ddlPayer' tag='SELECT' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:SelectItem.Target>
                                                                  </ui:SelectItem>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="359,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If sap:VirtualizedContainerService.HintSize="546,1260" sap2010:WorkflowViewState.IdRef="If_10">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">currentJToken.ToString()=="select_caretype"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="512,982" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="450,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <If sap:VirtualizedContainerService.HintSize="450,608" sap2010:WorkflowViewState.IdRef="If_2">
                                                                    <If.Condition>
                                                                      <InArgument x:TypeArguments="x:Boolean">
                                                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">care_type.Contains("long")</CSharpValue>
                                                                      </InArgument>
                                                                    </If.Condition>
                                                                    <If.Then>
                                                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,215" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'INPUT  MainContent_chkL...'" sap:VirtualizedContainerService.HintSize="354,130" sap2010:WorkflowViewState.IdRef="Check_1">
                                                                          <ui:Check.Target>
                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="21ba577b-d0bb-4884-8217-778e6fca5705" InformativeScreenshot="83d0fdde5089f9cd54b7451f95926122" Selector="&lt;webctrl id='MainContent_chkLongTermCare' tag='INPUT' /&gt;">
                                                                              <ui:Target.TimeoutMS>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:Target.TimeoutMS>
                                                                              <ui:Target.WaitForReady>
                                                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                              </ui:Target.WaitForReady>
                                                                            </ui:Target>
                                                                          </ui:Check.Target>
                                                                        </ui:Check>
                                                                      </Sequence>
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,215" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'INPUT  chkIntermittentC...'" sap:VirtualizedContainerService.HintSize="354,130" sap2010:WorkflowViewState.IdRef="Check_2">
                                                                          <ui:Check.Target>
                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6c84f4e1-2716-41e8-acc0-bc231ce5c8c5" InformativeScreenshot="b7d8479017b54f6b8d3f93deddce2304" Selector="&lt;webctrl id='chkIntermittentCare' tag='INPUT' /&gt;">
                                                                              <ui:Target.TimeoutMS>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:Target.TimeoutMS>
                                                                              <ui:Target.WaitForReady>
                                                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                              </ui:Target.WaitForReady>
                                                                            </ui:Target>
                                                                          </ui:Check.Target>
                                                                        </ui:Check>
                                                                      </Sequence>
                                                                    </If.Else>
                                                                  </If>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_173">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If sap:VirtualizedContainerService.HintSize="546,799" sap2010:WorkflowViewState.IdRef="If_11">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">currentJToken.ToString()=="check_duplication"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,521" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'INPUT  MainContent_btn_...'" sap:VirtualizedContainerService.HintSize="354,147" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                    <ui:Click.CursorPosition>
                                                                      <ui:CursorPosition Position="Center">
                                                                        <ui:CursorPosition.OffsetX>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetX>
                                                                        <ui:CursorPosition.OffsetY>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetY>
                                                                      </ui:CursorPosition>
                                                                    </ui:Click.CursorPosition>
                                                                    <ui:Click.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="58ff873b-6225-47dd-8759-bc8e17f32fd7" InformativeScreenshot="4896e9e6e474e7830210ca89caaaba95" Selector="&lt;webctrl css-selector='body&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;table' parentid='divIntakeMgmt' tag='TABLE' /&gt;&lt;webctrl id='MainContent_btn_checkduplicate' tableRow='1' tag='INPUT' /&gt;">
                                                                        <ui:Target.TimeoutMS>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:Target.TimeoutMS>
                                                                        <ui:Target.WaitForReady>
                                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                        </ui:Target.WaitForReady>
                                                                      </ui:Target>
                                                                    </ui:Click.Target>
                                                                  </ui:Click>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="546,2716" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <TryCatch.Try>
                                                                <p:CVScope ContinueOnError="{x:Null}" DelayBefore="{x:Null}" ScopeId="{x:Null}" ScrollOffset="{x:Null}" Server="{x:Null}" CvMethod="ElementDetection, OCR" DesignTimeCacheId="bf4de6ca-e453-4af7-9587-0a9e1b35418b" DisplayName="CV Screen Scope 'DIV'" sap:VirtualizedContainerService.HintSize="434,478" sap2010:WorkflowViewState.IdRef="CVScope_1" SendOnPremData="False" Version="V6">
                                                                  <p:CVScope.Body>
                                                                    <ActivityAction x:TypeArguments="x:Object">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="x:Object" Name="CVSessionData" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,245" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <p:CvElementExistsWithDescriptor DelayScreenshotAfterScroll="{x:Null}" DesignTimeCacheId="bf4de6ca-e453-4af7-9587-0a9e1b35418b" DesignTimeScaleFactor="1" DisplayName="CV Element Exists - Text" sap:VirtualizedContainerService.HintSize="400,160" sap2010:WorkflowViewState.IdRef="CvElementExistsWithDescriptor_1" InformativeScreenshot="c99e7047681c2864883183db2d072380" NumberOfScrolls="2" ScrollDirection="None" Version="V6">
                                                                          <p:CvElementExistsWithDescriptor.Descriptor>
                                                                            <InArgument x:TypeArguments="uc:CvDescriptor">
                                                                              <CSharpValue x:TypeArguments="uc:CvDescriptor" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">"Target: Text 'Duplicate Records' (21,12,131,19)"</CSharpValue>
                                                                            </InArgument>
                                                                          </p:CvElementExistsWithDescriptor.Descriptor>
                                                                          <p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                                                                            <uc:CvDescriptor Id="09e30711-3f52-46a3-aef2-7b239f592226">
                                                                              <uc:CvDescriptor.Target>
                                                                                <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="21, 12, 131, 19" ElementType="Text" Text="Duplicate Records" />
                                                                              </uc:CvDescriptor.Target>
                                                                            </uc:CvDescriptor>
                                                                          </p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                                                                          <p:CvElementExistsWithDescriptor.Result>
                                                                            <OutArgument x:TypeArguments="x:Boolean">
                                                                              <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">duplicate</CSharpReference>
                                                                            </OutArgument>
                                                                          </p:CvElementExistsWithDescriptor.Result>
                                                                        </p:CvElementExistsWithDescriptor>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </p:CVScope.Body>
                                                                  <p:CVScope.DesignTimeCache>
                                                                    <uc:CVCache CvUiElements="{x:Null}" OcrTexts="{x:Null}" DataSent="False" />
                                                                  </p:CVScope.DesignTimeCache>
                                                                  <p:CVScope.DesignTimeCacheContainer>
                                                                    <uc:CvCacheContainer>
                                                                      <uc:CvCacheContainer.Caches>
                                                                        <scg:List x:TypeArguments="uc:CVCache" Capacity="1">
                                                                          <uc:CVCache DataSent="False" DisplayName="Screen CV Element Exists - 'Du (Main)" Id="bf4de6ca-e453-4af7-9587-0a9e1b35418b" InformativeScreenshot="e089649f6806baf12de5a8b89708f03c" LogicalPosition="0, 673" OcrText="Duplicate Records The following Patients share similar Name, If the Patient you are adding is in the below list and you wish to readmit, then review the list to select a suitable record and click on the icon ... to readmit or use the above button 'Admit as New' to newly admit the patient into the system." Position="0, 673" ScreenshotGuid="ec93d97b-bcd9-4e64-be63-3e81ad9250cd" ServerVersion="1">
                                                                            <uc:CVCache.CvAnchorRelations>
                                                                              <scg:List x:TypeArguments="uc:AnchorRelationInfo" Capacity="0" />
                                                                            </uc:CVCache.CvAnchorRelations>
                                                                            <uc:CVCache.CvUiElements>
                                                                              <scg:List x:TypeArguments="uc:CvElementInfo" Capacity="8">
                                                                                <uc:CvElementInfo Category="Icon" Region="737, 66, 27, 16" />
                                                                                <uc:CvElementInfo Category="Button" Confidence="Runtime" Region="737, 67, 27, 16" />
                                                                                <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="3, 42, 337, 24" />
                                                                                <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="19, 8, 185, 32" />
                                                                                <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="19, 33, 141, 86" />
                                                                                <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="27, 1, 894, 53" />
                                                                                <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="7, 69, 241, 45" />
                                                                                <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="8, 83, 310, 17" />
                                                                              </scg:List>
                                                                            </uc:CVCache.CvUiElements>
                                                                            <uc:CVCache.OcrTexts>
                                                                              <scg:List x:TypeArguments="uc:OcrTextInfo" Capacity="57">
                                                                                <uc:OcrTextInfo Region="21, 12, 70, 19" Text="Duplicate" />
                                                                                <uc:OcrTextInfo Region="93, 12, 59, 16" Text="Records" />
                                                                                <uc:OcrTextInfo Region="21, 43, 21, 11" Text="The" />
                                                                                <uc:OcrTextInfo Region="43, 43, 48, 14" Text="following" />
                                                                                <uc:OcrTextInfo Region="93, 43, 43, 12" Text="Patients" />
                                                                                <uc:OcrTextInfo Region="136, 43, 31, 11" Text="share" />
                                                                                <uc:OcrTextInfo Region="168, 43, 37, 11" Text="similar" />
                                                                                <uc:OcrTextInfo Region="206, 43, 34, 13" Text="Name," />
                                                                                <uc:OcrTextInfo Region="21, 69, 9, 11" Text="If" />
                                                                                <uc:OcrTextInfo Region="31, 69, 19, 11" Text="the" />
                                                                                <uc:OcrTextInfo Region="51, 69, 38, 11" Text="Patient" />
                                                                                <uc:OcrTextInfo Region="89, 71, 21, 12" Text="you" />
                                                                                <uc:OcrTextInfo Region="112, 71, 18, 9" Text="are" />
                                                                                <uc:OcrTextInfo Region="131, 69, 37, 14" Text="adding" />
                                                                                <uc:OcrTextInfo Region="169, 69, 10, 11" Text="is" />
                                                                                <uc:OcrTextInfo Region="180, 69, 11, 11" Text="in" />
                                                                                <uc:OcrTextInfo Region="192, 69, 19, 11" Text="the" />
                                                                                <uc:OcrTextInfo Region="212, 69, 32, 11" Text="below" />
                                                                                <uc:OcrTextInfo Region="245, 69, 17, 11" Text="list" />
                                                                                <uc:OcrTextInfo Region="263, 69, 21, 11" Text="and" />
                                                                                <uc:OcrTextInfo Region="285, 71, 21, 12" Text="you" />
                                                                                <uc:OcrTextInfo Region="307, 69, 25, 11" Text="wish" />
                                                                                <uc:OcrTextInfo Region="333, 70, 13, 10" Text="to" />
                                                                                <uc:OcrTextInfo Region="347, 69, 44, 13" Text="readmit," />
                                                                                <uc:OcrTextInfo Region="392, 69, 25, 11" Text="then" />
                                                                                <uc:OcrTextInfo Region="419, 69, 35, 11" Text="review" />
                                                                                <uc:OcrTextInfo Region="455, 69, 18, 11" Text="the" />
                                                                                <uc:OcrTextInfo Region="475, 69, 16, 11" Text="list" />
                                                                                <uc:OcrTextInfo Region="492, 70, 12, 10" Text="to" />
                                                                                <uc:OcrTextInfo Region="505, 69, 32, 11" Text="select" />
                                                                                <uc:OcrTextInfo Region="538, 71, 7, 9" Text="a" />
                                                                                <uc:OcrTextInfo Region="547, 69, 42, 11" Text="suitable" />
                                                                                <uc:OcrTextInfo Region="590, 69, 35, 11" Text="record" />
                                                                                <uc:OcrTextInfo Region="626, 69, 21, 11" Text="and" />
                                                                                <uc:OcrTextInfo Region="649, 69, 23, 11" Text="click" />
                                                                                <uc:OcrTextInfo Region="673, 71, 15, 9" Text="on" />
                                                                                <uc:OcrTextInfo Region="690, 69, 18, 11" Text="the" />
                                                                                <uc:OcrTextInfo Region="709, 69, 23, 11" Text="icon" />
                                                                                <uc:OcrTextInfo Region="741, 70, 18, 7" Text="..." />
                                                                                <uc:OcrTextInfo Region="770, 70, 12, 10" Text="to" />
                                                                                <uc:OcrTextInfo Region="784, 69, 42, 11" Text="readmit" />
                                                                                <uc:OcrTextInfo Region="827, 71, 13, 9" Text="or" />
                                                                                <uc:OcrTextInfo Region="841, 71, 19, 9" Text="use" />
                                                                                <uc:OcrTextInfo Region="861, 69, 19, 11" Text="the" />
                                                                                <uc:OcrTextInfo Region="881, 69, 33, 11" Text="above" />
                                                                                <uc:OcrTextInfo Region="915, 69, 36, 11" Text="button" />
                                                                                <uc:OcrTextInfo Region="953, 69, 34, 11" Text="'Admit" />
                                                                                <uc:OcrTextInfo Region="987, 71, 14, 9" Text="as" />
                                                                                <uc:OcrTextInfo Region="1002, 69, 27, 11" Text="New'" />
                                                                                <uc:OcrTextInfo Region="1030, 70, 12, 10" Text="to" />
                                                                                <uc:OcrTextInfo Region="1044, 69, 32, 14" Text="newly" />
                                                                                <uc:OcrTextInfo Region="21, 86, 32, 11" Text="admit" />
                                                                                <uc:OcrTextInfo Region="54, 86, 18, 11" Text="the" />
                                                                                <uc:OcrTextInfo Region="74, 86, 38, 14" Text="patient" />
                                                                                <uc:OcrTextInfo Region="113, 86, 21, 11" Text="into" />
                                                                                <uc:OcrTextInfo Region="135, 86, 19, 11" Text="the" />
                                                                                <uc:OcrTextInfo Region="155, 88, 41, 12" Text="system." />
                                                                              </scg:List>
                                                                            </uc:CVCache.OcrTexts>
                                                                          </uc:CVCache>
                                                                        </scg:List>
                                                                      </uc:CvCacheContainer.Caches>
                                                                    </uc:CvCacheContainer>
                                                                  </p:CVScope.DesignTimeCacheContainer>
                                                                  <p:CVScope.OCREngine>
                                                                    <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd2:Rectangle, x:String))">
                                                                      <ActivityFunc.Argument>
                                                                        <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                                                                      </ActivityFunc.Argument>
                                                                      <p1:UiPathScreenOCR ApiKey="{x:Null}" Endpoint="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ComputeSkewAngle="False" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="UiPathScreenOCR_1" Language="en" NoopExecution="False" Profile="Screen" Scale="1" Timeout="100000">
                                                                        <p1:UiPathScreenOCR.Image>
                                                                          <InArgument x:TypeArguments="sd1:Image">
                                                                            <CSharpValue x:TypeArguments="sd1:Image" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">Image</CSharpValue>
                                                                          </InArgument>
                                                                        </p1:UiPathScreenOCR.Image>
                                                                      </p1:UiPathScreenOCR>
                                                                    </ActivityFunc>
                                                                  </p:CVScope.OCREngine>
                                                                  <p:CVScope.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="879197e2-dafb-483d-8ad2-fbe28b664b7b" InformativeScreenshot="4c5f45deb5b293a78a25cb05090e37c6" Selector="&lt;webctrl omit:css-selector='body&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div' parentid='DivDuplication' tag='DIV' /&gt;" WaitForReady="INTERACTIVE">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                    </ui:Target>
                                                                  </p:CVScope.Target>
                                                                  <p:CVScope.UseLocalServer>
                                                                    <InArgument x:TypeArguments="x:Boolean" />
                                                                  </p:CVScope.UseLocalServer>
                                                                </p:CVScope>
                                                              </TryCatch.Try>
                                                              <TryCatch.Catches>
                                                                <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="438,472" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ActivityAction x:TypeArguments="s:NullReferenceException">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
                                                                    </ActivityAction.Argument>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="416,402" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="LogMessage_8">
                                                                        <ui:LogMessage.Level>
                                                                          <InArgument x:TypeArguments="ui:LogLevel">
                                                                            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:LogMessage.Level>
                                                                        <ui:LogMessage.Message>
                                                                          <InArgument x:TypeArguments="x:Object">
                                                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:LogMessage.Message>
                                                                      </ui:LogMessage>
                                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                        <ui:InvokeWorkflowFile.Arguments>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                          </InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:InvokeWorkflowFile.Arguments>
                                                                      </ui:InvokeWorkflowFile>
                                                                    </Sequence>
                                                                  </ActivityAction>
                                                                </Catch>
                                                                <Catch x:TypeArguments="ui:SelectorNotFoundException" sap:VirtualizedContainerService.HintSize="438,472" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                                                                    </ActivityAction.Argument>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="416,402" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="LogMessage_7">
                                                                        <ui:LogMessage.Level>
                                                                          <InArgument x:TypeArguments="ui:LogLevel">
                                                                            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:LogMessage.Level>
                                                                        <ui:LogMessage.Message>
                                                                          <InArgument x:TypeArguments="x:Object">
                                                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:LogMessage.Message>
                                                                      </ui:LogMessage>
                                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                        <ui:InvokeWorkflowFile.Arguments>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                          </InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:InvokeWorkflowFile.Arguments>
                                                                      </ui:InvokeWorkflowFile>
                                                                    </Sequence>
                                                                  </ActivityAction>
                                                                </Catch>
                                                                <Catch x:TypeArguments="uc:ElementNotFoundException" sap:VirtualizedContainerService.HintSize="438,472" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ActivityAction x:TypeArguments="uc:ElementNotFoundException">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="uc:ElementNotFoundException" Name="exception" />
                                                                    </ActivityAction.Argument>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="416,402" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="LogMessage_9">
                                                                        <ui:LogMessage.Level>
                                                                          <InArgument x:TypeArguments="ui:LogLevel">
                                                                            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:LogMessage.Level>
                                                                        <ui:LogMessage.Message>
                                                                          <InArgument x:TypeArguments="x:Object">
                                                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:LogMessage.Message>
                                                                      </ui:LogMessage>
                                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                        <ui:InvokeWorkflowFile.Arguments>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                          </InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:InvokeWorkflowFile.Arguments>
                                                                      </ui:InvokeWorkflowFile>
                                                                    </Sequence>
                                                                  </ActivityAction>
                                                                </Catch>
                                                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438,472" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                    </ActivityAction.Argument>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="416,402" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="LogMessage_18">
                                                                        <ui:LogMessage.Level>
                                                                          <InArgument x:TypeArguments="ui:LogLevel">
                                                                            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:LogMessage.Level>
                                                                        <ui:LogMessage.Message>
                                                                          <InArgument x:TypeArguments="x:Object">
                                                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:LogMessage.Message>
                                                                      </ui:LogMessage>
                                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                        <ui:InvokeWorkflowFile.Arguments>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                          </InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                                          </InArgument>
                                                                        </ui:InvokeWorkflowFile.Arguments>
                                                                      </ui:InvokeWorkflowFile>
                                                                    </Sequence>
                                                                  </ActivityAction>
                                                                </Catch>
                                                              </TryCatch.Catches>
                                                            </TryCatch>
                                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="546,181" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace">
                                                              <ui:LogMessage.Message>
                                                                <InArgument x:TypeArguments="x:Object">
                                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">duplicate</CSharpValue>
                                                                </InArgument>
                                                              </ui:LogMessage.Message>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:LogMessage>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="546,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                </InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">"duplicate inatake exists - "+duplicate</CSharpValue>
                                                                </InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                            <If sap:VirtualizedContainerService.HintSize="546,1407" sap2010:WorkflowViewState.IdRef="If_12">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">currentJToken.ToString()=="click_intake_creation"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="512,1129" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="450,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <If sap:VirtualizedContainerService.HintSize="450,755" sap2010:WorkflowViewState.IdRef="If_1">
                                                                    <If.Condition>
                                                                      <InArgument x:TypeArguments="x:Boolean">
                                                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">duplicate == true</CSharpValue>
                                                                      </InArgument>
                                                                    </If.Condition>
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <If.Then>
                                                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,362" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'INPUT  btn_admitasnew'" sap:VirtualizedContainerService.HintSize="354,147" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                          <ui:Click.CursorPosition>
                                                                            <ui:CursorPosition Position="Center">
                                                                              <ui:CursorPosition.OffsetX>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:CursorPosition.OffsetX>
                                                                              <ui:CursorPosition.OffsetY>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:CursorPosition.OffsetY>
                                                                            </ui:CursorPosition>
                                                                          </ui:Click.CursorPosition>
                                                                          <ui:Click.Target>
                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="03e449ad-13a9-408f-a11e-d2110975a252" InformativeScreenshot="c21aaa76036c73c1aae69711b1ff54ca" Selector="&lt;webctrl id='btn_admitasnew' tag='INPUT' /&gt;">
                                                                              <ui:Target.TimeoutMS>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:Target.TimeoutMS>
                                                                              <ui:Target.WaitForReady>
                                                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                              </ui:Target.WaitForReady>
                                                                            </ui:Target>
                                                                          </ui:Click.Target>
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </ui:Click>
                                                                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  OK'" sap:VirtualizedContainerService.HintSize="354,130" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                          <ui:Click.CursorPosition>
                                                                            <ui:CursorPosition Position="Center">
                                                                              <ui:CursorPosition.OffsetX>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:CursorPosition.OffsetX>
                                                                              <ui:CursorPosition.OffsetY>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:CursorPosition.OffsetY>
                                                                            </ui:CursorPosition>
                                                                          </ui:Click.CursorPosition>
                                                                          <ui:Click.Target>
                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f9ddcad8-2eaf-47ec-b1e3-cf23172dcc71" InformativeScreenshot="ee341117c423c300d6442abaa5a002d8" Selector="&lt;wnd app='chrome.exe' cls='Chrome_WidgetWin_1' title='KanTime Medicare - Transfer Client - *' /&gt;&lt;ctrl name='*kantimehealth.net says' role='dialog' /&gt;&lt;ctrl name='OK' role='push button' /&gt;">
                                                                              <ui:Target.TimeoutMS>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:Target.TimeoutMS>
                                                                              <ui:Target.WaitForReady>
                                                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                              </ui:Target.WaitForReady>
                                                                            </ui:Target>
                                                                          </ui:Click.Target>
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </ui:Click>
                                                                      </Sequence>
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,215" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'INPUT  btn_admitasnew'" sap:VirtualizedContainerService.HintSize="354,130" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                          <ui:Click.CursorPosition>
                                                                            <ui:CursorPosition Position="Center">
                                                                              <ui:CursorPosition.OffsetX>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:CursorPosition.OffsetX>
                                                                              <ui:CursorPosition.OffsetY>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:CursorPosition.OffsetY>
                                                                            </ui:CursorPosition>
                                                                          </ui:Click.CursorPosition>
                                                                          <ui:Click.Target>
                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="03e449ad-13a9-408f-a11e-d2110975a252" InformativeScreenshot="c21aaa76036c73c1aae69711b1ff54ca" Selector="&lt;webctrl id='btn_admitasnew' tag='INPUT' /&gt;">
                                                                              <ui:Target.TimeoutMS>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:Target.TimeoutMS>
                                                                              <ui:Target.WaitForReady>
                                                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                              </ui:Target.WaitForReady>
                                                                            </ui:Target>
                                                                          </ui:Click.Target>
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </ui:Click>
                                                                      </Sequence>
                                                                    </If.Else>
                                                                  </If>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="546,130" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                                            <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Use Application/Browser" sap:VirtualizedContainerService.HintSize="546,1255" sap2010:WorkflowViewState.IdRef="NApplicationCard_3" InteractionMode="DebuggerApi" OpenMode="Never" ScopeGuid="52413aad-ef93-46c6-8c7c-1ed1e5dc505c" Version="V2" WindowResize="Maximize">
                                                              <uix:NApplicationCard.Body>
                                                                <ActivityAction x:TypeArguments="x:Object">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,1078" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                                    <Sequence.Variables>
                                                                      <Variable x:TypeArguments="x:String" Name="extracted_2" />
                                                                      <Variable x:TypeArguments="x:String" Name="extracted_1" />
                                                                      <Variable x:TypeArguments="x:String" Name="extracted_12" />
                                                                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="extracted_22" />
                                                                    </Sequence.Variables>
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <uix:NGetUrl DisplayName="Get URL" sap:VirtualizedContainerService.HintSize="354,127" sap2010:WorkflowViewState.IdRef="NGetUrl_2" Version="V3">
                                                                      <uix:NGetUrl.CurrentUrl>
                                                                        <OutArgument x:TypeArguments="x:String">
                                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">intake_url</CSharpReference>
                                                                        </OutArgument>
                                                                      </uix:NGetUrl.CurrentUrl>
                                                                    </uix:NGetUrl>
                                                                    <ui:TextToLeftRight DisplayName="Text to Left/Right" sap:VirtualizedContainerService.HintSize="354,312" sap2010:WorkflowViewState.IdRef="TextToLeftRight_2" Separator="?" SeparatorKey="Custom">
                                                                      <ui:TextToLeftRight.FullText>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">intake_url</CSharpValue>
                                                                        </InArgument>
                                                                      </ui:TextToLeftRight.FullText>
                                                                      <ui:TextToLeftRight.TextToLeft>
                                                                        <OutArgument x:TypeArguments="x:String">
                                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">extracted_1</CSharpReference>
                                                                        </OutArgument>
                                                                      </ui:TextToLeftRight.TextToLeft>
                                                                      <ui:TextToLeftRight.TextToRight>
                                                                        <OutArgument x:TypeArguments="x:String">
                                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">extracted_2</CSharpReference>
                                                                        </OutArgument>
                                                                      </ui:TextToLeftRight.TextToRight>
                                                                    </ui:TextToLeftRight>
                                                                    <uast:SplitText DisplayName="Split Text" sap:VirtualizedContainerService.HintSize="354,231" sap2010:WorkflowViewState.IdRef="SplitText_5" Separator="&amp;" SeparatorKey="Custom">
                                                                      <uast:SplitText.Result>
                                                                        <OutArgument x:TypeArguments="x:String">
                                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">extracted_12</CSharpReference>
                                                                        </OutArgument>
                                                                      </uast:SplitText.Result>
                                                                      <uast:SplitText.Results>
                                                                        <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">
                                                                          <CSharpReference x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">extracted_22</CSharpReference>
                                                                        </OutArgument>
                                                                      </uast:SplitText.Results>
                                                                      <uast:SplitText.Source>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">extracted_2.ToString()</CSharpValue>
                                                                        </InArgument>
                                                                      </uast:SplitText.Source>
                                                                    </uast:SplitText>
                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,183" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Trace">
                                                                      <ui:LogMessage.Message>
                                                                        <InArgument x:TypeArguments="x:Object">
                                                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_192">"Intake is created with "+extracted_12.ToString()</CSharpValue>
                                                                        </InArgument>
                                                                      </ui:LogMessage.Message>
                                                                    </ui:LogMessage>
                                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,138" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_193">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                        </InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">"Intake is created with "+extracted_12.ToString()</CSharpValue>
                                                                        </InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </uix:NApplicationCard.Body>
                                                              <uix:NApplicationCard.InUiElement>
                                                                <InArgument x:TypeArguments="ui:UiElement">
                                                                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195">opened_browser</CSharpValue>
                                                                </InArgument>
                                                              </uix:NApplicationCard.InUiElement>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </uix:NApplicationCard>
                                                            <If sap:VirtualizedContainerService.HintSize="546,788" sap2010:WorkflowViewState.IdRef="If_13">
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196">currentJToken.ToString()=="logout"</CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If.Then>
                                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,527" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_197">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_198">currentJToken.ToString()+ " step is started."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="logout - Invoke Workflow File (KT Pages\\logout.xaml)" sap:VirtualizedContainerService.HintSize="354,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="KT Pages\\logout.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                      </InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201">currentJToken.ToString()+ " step is ended."</CSharpValue>
                                                                      </InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:ForEach.Body>
                                                      <ui:ForEach.Values>
                                                        <InArgument x:TypeArguments="sc:IEnumerable">
                                                          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">workflow_template_values</CSharpValue>
                                                        </InArgument>
                                                      </ui:ForEach.Values>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:ForEach>
                                                  </Sequence>
                                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="354,75" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                                    <ui:CommentOut.Body>
                                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,1171" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Use Application/Browser" sap:VirtualizedContainerService.HintSize="450,1086" sap2010:WorkflowViewState.IdRef="NApplicationCard_2" InteractionMode="DebuggerApi" OpenMode="Never" ScopeGuid="52413aad-ef93-46c6-8c7c-1ed1e5dc505c" Version="V2" WindowResize="Maximize">
                                                          <uix:NApplicationCard.Body>
                                                            <ActivityAction x:TypeArguments="x:Object">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                                                              </ActivityAction.Argument>
                                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,926" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="x:String" Name="extracted_2" />
                                                                  <Variable x:TypeArguments="x:String" Name="extracted_1" />
                                                                  <Variable x:TypeArguments="x:String" Name="extracted_12" />
                                                                  <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="extracted_22" />
                                                                </Sequence.Variables>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <uix:NGetUrl DisplayName="Get URL" sap:VirtualizedContainerService.HintSize="354,127" sap2010:WorkflowViewState.IdRef="NGetUrl_1" Version="V3">
                                                                  <uix:NGetUrl.CurrentUrl>
                                                                    <OutArgument x:TypeArguments="x:String">
                                                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">intake_url</CSharpReference>
                                                                    </OutArgument>
                                                                  </uix:NGetUrl.CurrentUrl>
                                                                </uix:NGetUrl>
                                                                <ui:TextToLeftRight DisplayName="Text to Left/Right" sap:VirtualizedContainerService.HintSize="354,312" sap2010:WorkflowViewState.IdRef="TextToLeftRight_1" Separator="?" SeparatorKey="Custom">
                                                                  <ui:TextToLeftRight.FullText>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">intake_url</CSharpValue>
                                                                    </InArgument>
                                                                  </ui:TextToLeftRight.FullText>
                                                                  <ui:TextToLeftRight.TextToLeft>
                                                                    <OutArgument x:TypeArguments="x:String">
                                                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">extracted_1</CSharpReference>
                                                                    </OutArgument>
                                                                  </ui:TextToLeftRight.TextToLeft>
                                                                  <ui:TextToLeftRight.TextToRight>
                                                                    <OutArgument x:TypeArguments="x:String">
                                                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">extracted_2</CSharpReference>
                                                                    </OutArgument>
                                                                  </ui:TextToLeftRight.TextToRight>
                                                                </ui:TextToLeftRight>
                                                                <uast:SplitText DisplayName="Split Text" sap:VirtualizedContainerService.HintSize="354,231" sap2010:WorkflowViewState.IdRef="SplitText_3" Separator="&amp;" SeparatorKey="Custom">
                                                                  <uast:SplitText.Result>
                                                                    <OutArgument x:TypeArguments="x:String">
                                                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">extracted_12</CSharpReference>
                                                                    </OutArgument>
                                                                  </uast:SplitText.Result>
                                                                  <uast:SplitText.Results>
                                                                    <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">
                                                                      <CSharpReference x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">extracted_22</CSharpReference>
                                                                    </OutArgument>
                                                                  </uast:SplitText.Results>
                                                                  <uast:SplitText.Source>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">extracted_2.ToString()</CSharpValue>
                                                                    </InArgument>
                                                                  </uast:SplitText.Source>
                                                                </uast:SplitText>
                                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error">
                                                                  <ui:LogMessage.Message>
                                                                    <InArgument x:TypeArguments="x:Object">
                                                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">"Intake is created with "+extracted_12.ToString()</CSharpValue>
                                                                    </InArgument>
                                                                  </ui:LogMessage.Message>
                                                                </ui:LogMessage>
                                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,77" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                                    </InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">"Intake is created with "+extracted_12.ToString()</CSharpValue>
                                                                    </InArgument>
                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                </ui:InvokeWorkflowFile>
                                                              </Sequence>
                                                            </ActivityAction>
                                                          </uix:NApplicationCard.Body>
                                                          <uix:NApplicationCard.InUiElement>
                                                            <InArgument x:TypeArguments="ui:UiElement">
                                                              <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">opened_browser</CSharpValue>
                                                            </InArgument>
                                                          </uix:NApplicationCard.InUiElement>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </uix:NApplicationCard>
                                                      </Sequence>
                                                    </ui:CommentOut.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:CommentOut>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:OpenBrowser.Body>
                                            <ui:OpenBrowser.UiBrowser>
                                              <OutArgument x:TypeArguments="ui:Browser">
                                                <CSharpReference x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">opened_browser</CSharpReference>
                                              </OutArgument>
                                            </ui:OpenBrowser.UiBrowser>
                                            <ui:OpenBrowser.Url>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">url</CSharpValue>
                                              </InArgument>
                                            </ui:OpenBrowser.Url>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:OpenBrowser>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="804,472" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence sap:VirtualizedContainerService.HintSize="416,402" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="LogMessage_12">
                                                  <ui:LogMessage.Level>
                                                    <InArgument x:TypeArguments="ui:LogLevel">
                                                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                                                    </InArgument>
                                                  </ui:LogMessage.Level>
                                                  <ui:LogMessage.Message>
                                                    <InArgument x:TypeArguments="x:Object">
                                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                    </InArgument>
                                                  </ui:LogMessage.Message>
                                                </ui:LogMessage>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorLogs.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,136" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Functions\\ErrorLogs.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="argfilepath">
                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">Directory.GetCurrentDirectory().ToString()</CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="argClaimid">Error</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="argLogtext">
                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">exception.Source.ToString() + " due to : " + exception.Message.ToString()</CSharpValue>
                                                    </InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <FlowStep.Next>
                                        <FlowStep x:Name="__ReferenceID8">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:Point x:Key="ShapeLocation">218,1043</av:Point>
                                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                                              <av:PointCollection x:Key="ConnectorLocation">318,1095 318,1145</av:PointCollection>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
                                            <ui:ReadTextFile.Content>
                                              <OutArgument x:TypeArguments="x:String">
                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">extracted_error_logs</CSharpReference>
                                              </OutArgument>
                                            </ui:ReadTextFile.Content>
                                            <ui:ReadTextFile.FileName>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">Directory.GetCurrentDirectory().ToString()+"\\Error_log.txt"</CSharpValue>
                                              </InArgument>
                                            </ui:ReadTextFile.FileName>
                                          </ui:ReadTextFile>
                                          <FlowStep.Next>
                                            <FlowStep x:Name="__ReferenceID9">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <av:Point x:Key="ShapeLocation">218,1145</av:Point>
                                                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                  <av:PointCollection x:Key="ConnectorLocation">318,1197 318,1247</av:PointCollection>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <uast:FindAndReplace DisplayName="Escape singl quote" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="FindAndReplace_1" MatchCase="False" ReplaceWith="''" ValueToFind="'">
                                                <uast:FindAndReplace.Result>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">extracted_error_logs_escaped</CSharpReference>
                                                  </OutArgument>
                                                </uast:FindAndReplace.Result>
                                                <uast:FindAndReplace.Source>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">extracted_error_logs</CSharpValue>
                                                  </InArgument>
                                                </uast:FindAndReplace.Source>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </uast:FindAndReplace>
                                              <FlowStep.Next>
                                                <FlowStep x:Name="__ReferenceID6">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <av:Point x:Key="ShapeLocation">218,1247</av:Point>
                                                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                      <av:PointCollection x:Key="ConnectorLocation">318,1299 318,1349</av:PointCollection>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="log insertion" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1">
                                                    <ui:ExecuteNonQuery.ExistingDbConnection>
                                                      <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                        <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">db_connection</CSharpValue>
                                                      </InArgument>
                                                    </ui:ExecuteNonQuery.ExistingDbConnection>
                                                    <ui:ExecuteNonQuery.Parameters>
                                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                    </ui:ExecuteNonQuery.Parameters>
                                                    <ui:ExecuteNonQuery.Sql>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">"insert into ZephyrUIPathLog (createdon, log_info) values (GETDATE(),'"+extracted_error_logs_escaped+"')"</CSharpValue>
                                                      </InArgument>
                                                    </ui:ExecuteNonQuery.Sql>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:ExecuteNonQuery>
                                                  <FlowStep.Next>
                                                    <FlowStep x:Name="__ReferenceID7">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <av:Point x:Key="ShapeLocation">218,1349</av:Point>
                                                          <av:Size x:Key="ShapeSize">200,81</av:Size>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Sequence DisplayName="delete logs and disconnect from DB" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="388,120" sap2010:WorkflowViewState.IdRef="DeleteFileX_1">
                                                          <ui:DeleteFileX.Path>
                                                            <InArgument x:TypeArguments="x:String">
                                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">Directory.GetCurrentDirectory().ToString()+"\\Error_log.txt"</CSharpValue>
                                                            </InArgument>
                                                          </ui:DeleteFileX.Path>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </ui:DeleteFileX>
                                                        <ui:DatabaseDisconnect DisplayName="Disconnect from Database" sap:VirtualizedContainerService.HintSize="388,48" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1">
                                                          <ui:DatabaseDisconnect.DatabaseConnection>
                                                            <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                              <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">db_connection</CSharpValue>
                                                            </InArgument>
                                                          </ui:DatabaseDisconnect.DatabaseConnection>
                                                        </ui:DatabaseDisconnect>
                                                      </Sequence>
                                                    </FlowStep>
                                                  </FlowStep.Next>
                                                </FlowStep>
                                              </FlowStep.Next>
                                            </FlowStep>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
  </Flowchart>
</Activity>